---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <section class="contact-section">
    <h1>Contact Us</h1>
    <p class="intro">Have questions or want to get involved? We'd love to hear from you!</p>
    
    <form id="contact-form" class="contact-form">
      <div class="form-group">
        <label for="name">Name</label>
        <input 
          type="text" 
          id="name" 
          name="name" 
          required 
          class="form-input"
        />
      </div>

      <div class="form-group">
        <label for="email">Email</label>
        <input 
          type="email" 
          id="email" 
          name="email" 
          required 
          class="form-input"
        />
      </div>

      <div class="form-group">
        <label for="message">Message</label>
        <textarea 
          id="message" 
          name="message" 
          required 
          class="form-input"
          rows="6"
        ></textarea>
      </div>

      <button type="submit" class="submit-button">Send Message</button>
      
      <div id="form-message" class="form-message"></div>
    </form>
  </section>
</Layout>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement;
  const messageDiv = document.getElementById('form-message');
  const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    if (!form || !messageDiv || !submitButton) return;

    // Disable the submit button and show loading state
    submitButton.disabled = true;
    submitButton.textContent = 'Sending...';
    messageDiv.className = 'form-message';
    messageDiv.textContent = '';
    
    const formData = new FormData(form);
    const data = {
      name: formData.get('name'),
      email: formData.get('email'),
      message: formData.get('message')
    };

    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      let result;
      const contentType = response.headers.get('content-type');
      if (contentType && contentType.includes('application/json')) {
        result = await response.json();
      } else {
        result = { message: 'Server error occurred' };
      }
    
      if (response.ok) {
        messageDiv.textContent = 'Thank you for your message! We will get back to you soon.';
        messageDiv.className = 'form-message success';
        form.reset();
      } else {
        throw new Error(result.message || 'Something went wrong');
      }
    } catch (error) {
      console.error('Error:', error);
      messageDiv.textContent = error instanceof Error ? error.message : 'Failed to send message. Please try again.';
      messageDiv.className = 'form-message error';
    } finally {
      // Re-enable the submit button and restore its text
      submitButton.disabled = false;
      submitButton.textContent = 'Send Message';
    }
  });
</script>

<style>
  .contact-section {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  h1 {
    font-size: 2.5rem;
    color: #333;
    margin-bottom: 1rem;
  }

  .intro {
    font-size: 1.2rem;
    color: #666;
    margin-bottom: 2rem;
  }

  .contact-form {
    background: white;
    padding: 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  label {
    display: block;
    margin-bottom: 0.5rem;
    color: #333;
    font-weight: 500;
  }

  .form-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 1rem;
    transition: border-color 0.2s;
  }

  .form-input:focus {
    outline: none;
    border-color: #666;
  }

  textarea.form-input {
    resize: vertical;
    min-height: 120px;
  }

  .submit-button {
    background-color: #333;
    color: white;
    border: none;
    padding: 1rem 2rem;
    font-size: 1rem;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .submit-button:hover:not(:disabled) {
    background-color: #444;
  }

  .submit-button:disabled {
    background-color: #999;
    cursor: not-allowed;
  }

  .form-message {
    margin-top: 1rem;
    padding: 1rem;
    border-radius: 4px;
    display: none;
  }

  .form-message.success {
    display: block;
    background-color: #e8f5e9;
    color: #2e7d32;
  }

  .form-message.error {
    display: block;
    background-color: #ffebee;
    color: #c62828;
  }

  /* Mobile styles */
  @media (max-width: 768px) {
    .contact-section {
      padding: 1rem;
    }

    h1 {
      font-size: 2rem;
    }

    .contact-form {
      padding: 1.5rem;
    }
  }
</style> 