---
interface Props {
  name: string;
  image?: string;
  dtstart: string;
  dtend: string;
  ageMin?: number;
  ageMax?: number;
  cost?: number;
  instructors: string[];
}

const { name, eventId,image, dtstart, dtend, ageMin, ageMax, cost, instructors } = Astro.props;

// Format the date range
const startDate = new Date(dtstart);
const endDate = new Date(dtend);
const formattedDate = `${startDate.toLocaleDateString()} ${startDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })} - ${endDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;
---

<article class="class-card">
  {image && (
    <div class="class-image">
      <img src={image} alt={name} />
    </div>
  )}
  <div class="class-content">
    <h2>{name}</h2>
    <p>{eventId}</p>
    <div class="class-details">
      <p class="schedule">
        <strong>When:</strong> {formattedDate}
      </p>
      <p class="instructors">
        <strong>Instructors:</strong> {instructors.join(', ')}
      </p>
      {ageMin && ageMax && (
        <p class="age-range">
          <strong>Ages:</strong> {ageMin}-{ageMax}
        </p>
      )}
      {cost && (
        <p class="cost">
          <strong>Cost:</strong> ${cost}
        </p>
      )}
    </div>
    <div class="description">
      <slot />
    </div>
  </div>
</article>

<style>
  .class-card {
    display: grid;
    grid-template-columns: 10rem 1fr;
    gap: 1.5rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .class-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }
  
  @media (max-width: 768px) {
    .class-card {
      grid-template-columns: 1fr;
    }
  }

  .class-image {
    width: 100%;
    height: 10rem;
    overflow: hidden;
  }

  .class-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .class-content {
    padding: 1.5rem 1.5rem 1.5rem 0;
  }

  h2 {
    font-size: 1.5rem;
    margin: 0 0 1rem 0;
    color: #333;
  }

  .class-details {
    margin-bottom: 1rem;
  }

  .class-details p {
    margin: 0.5rem 0;
    color: #666;
  }

  .description {
    color: #444;
    line-height: 1.6;
  }

  .description :global(p) {
    margin: 0 0 1rem 0;
  }

  .description :global(p:last-child) {
    margin-bottom: 0;
  }
</style> 